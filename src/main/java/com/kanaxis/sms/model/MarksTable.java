package com.kanaxis.sms.model;

// Generated Nov 8, 2015 4:22:25 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MarksTable generated by hbm2java
 */
@Entity
@Table(name = "marks_table", catalog = "sms")
public class MarksTable implements java.io.Serializable {

	private Integer id;
	private Section section;
	private Student student;
	private Subject subject;
	private Examtype examtype;
	private Classes classes;
	private Double marksObtained;
	private Double maxMarks;
	private Integer subjectWiseRank;
	private Date dateOfExam;

	public MarksTable() {
	}

	public MarksTable(Section section, Student student, Subject subject,
			Examtype examtype, Classes classes, Double marksObtained,
			Double maxMarks, Integer subjectWiseRank, Date dateOfExam) {
		this.section = section;
		this.student = student;
		this.subject = subject;
		this.examtype = examtype;
		this.classes = classes;
		this.marksObtained = marksObtained;
		this.maxMarks = maxMarks;
		this.subjectWiseRank = subjectWiseRank;
		this.dateOfExam = dateOfExam;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "section_id")
	public Section getSection() {
		return this.section;
	}

	public void setSection(Section section) {
		this.section = section;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "st_id")
	public Student getStudent() {
		return this.student;
	}

	public void setStudent(Student student) {
		this.student = student;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subj_id")
	public Subject getSubject() {
		return this.subject;
	}

	public void setSubject(Subject subject) {
		this.subject = subject;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "exam_type")
	public Examtype getExamtype() {
		return this.examtype;
	}

	public void setExamtype(Examtype examtype) {
		this.examtype = examtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id")
	public Classes getClasses() {
		return this.classes;
	}

	public void setClasses(Classes classes) {
		this.classes = classes;
	}

	@Column(name = "marks_obtained", precision = 22, scale = 0)
	public Double getMarksObtained() {
		return this.marksObtained;
	}

	public void setMarksObtained(Double marksObtained) {
		this.marksObtained = marksObtained;
	}

	@Column(name = "max_marks", precision = 22, scale = 0)
	public Double getMaxMarks() {
		return this.maxMarks;
	}

	public void setMaxMarks(Double maxMarks) {
		this.maxMarks = maxMarks;
	}

	@Column(name = "subject_wise_rank")
	public Integer getSubjectWiseRank() {
		return this.subjectWiseRank;
	}

	public void setSubjectWiseRank(Integer subjectWiseRank) {
		this.subjectWiseRank = subjectWiseRank;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_exam", length = 10)
	public Date getDateOfExam() {
		return this.dateOfExam;
	}

	public void setDateOfExam(Date dateOfExam) {
		this.dateOfExam = dateOfExam;
	}

}
